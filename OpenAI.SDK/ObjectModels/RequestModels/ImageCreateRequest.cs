using System.Text.Json.Serialization;
using Betalgo.Ranul.OpenAI.ObjectModels.SharedModels;

namespace Betalgo.Ranul.OpenAI.ObjectModels.RequestModels;

/// <summary>
///     Image Create Request Model
/// </summary>
public record ImageCreateRequest : SharedImageRequestBaseModel, IOpenAIModels.IUser
{
    public ImageCreateRequest()
    {
    }

    public ImageCreateRequest(string prompt)
    {
        Prompt = prompt;
    }

    /// <summary>
    ///     A text description of the desired image(s). The maximum length is 1000 characters for dall-e-2 and 4000 characters
    ///     for dall-e-3
    /// </summary>
    [JsonPropertyName("prompt")]
    public string Prompt { get; set; }

    /// <summary>
    ///     The quality of the image that will be generated. Possible values are 'standard' or 'hd' (default is 'standard').
    ///     Hd creates images with finer details and greater consistency across the image.
    ///     This param is only supported for dall-e-3 model.
    ///     <br /><br />Check <see cref="StaticValues.ImageStatics.Quality" /> for possible values
    /// </summary>
    [JsonPropertyName("quality")]
    public string? Quality { get; set; }

    /// <summary>
    ///     The style of the generated images. Must be one of vivid or natural.
    ///     Vivid causes the model to lean towards generating hyper-real and dramatic images.
    ///     Natural causes the model to produce more natural, less hyper-real looking images. This param is only supported for
    ///     dall-e-3.
    ///     <br /><br />Check <see cref="StaticValues.ImageStatics.Style" /> for possible values
    /// </summary>
    [JsonPropertyName("style")]
    public string? Style { get; set; }

    /// <summary>
    ///     Allows to set transparency for the background of the generated image(s). This parameter is only supported for gpt-image-1.
    ///     Must be one of transparent, opaque or auto (default value). When auto is used, the model will automatically determine
    ///     the best background for the image.
    ///     If transparent, the output format needs to support transparency, so it should be set to either png (default value) or webp.
    ///     <br /><br />Check <see cref="StaticValues.ImageStatics.Background" /> for possible values
    /// </summary>
    [JsonPropertyName("background")]
    public string? Background { get; set; }

    /// <summary>
    ///     Control the content-moderation level for images generated by gpt-image-1. Must be either low for less restrictive
    ///     filtering or auto (default value).
    ///     <br /><br />Check <see cref="StaticValues.ImageStatics.Moderation" /> for possible values
    /// </summary>
    [JsonPropertyName("moderation")]
    public string? Moderation { get; set; }

    /// <summary>
    ///     The compression level (0-100%) for the generated images. This parameter is only supported for gpt-image-1
    ///     with the webp or jpeg output formats, and defaults to 100.
    /// </summary>
    [JsonPropertyName("output_compression")]
    public int? OutputCompression { get; set; }

    /// <summary>
    ///     The format in which the generated images are returned. This parameter is only supported for gpt-image-1.
    ///     Must be one of png, jpeg, or webp.
    ///     <br /><br />Check <see cref="StaticValues.ImageStatics.OutputFormat" /> for possible values
    /// </summary>
    [JsonPropertyName("output_format")]
    public string? OutputFormat { get; set; }
}